#!/usr/bin/env bash

##################################################
# Environment
##################################################

export DEBIAN_FRONTEND="noninteractive"

##################################################
# Function
##################################################

logger() {
  local type="${1}"
  local message="${2}"
  timestamp=$(date --rfc-3339=seconds)
  local timestamp

  case "${type}" in
  err | error)
    echo "${timestamp} [ERROR] ${message}"
    ;;
  info | information)
    echo "${timestamp} [INFO] ${message}"
    ;;
  warn | warning)
    echo "${timestamp} [WARN] ${message}"
    ;;
  esac
}

get_system_architecture() {
  systemArchitecture="$(uname -m)"
  export systemArchitecture

  case ${systemArchitecture} in
  x86_64)
    logger "info" "Architecture is x86_64"
    export ARCHITECTURE="amd64"
    ;;
  aarch64 | armv8*)
    logger "info" "Architecture is aarch64 or armv8"
    export ARCHITECTURE="arm64"
    ;;
  *)
    logger "error" "Architecture ${systemArchitecture} is not supported"
    exit 1
    ;;
  esac
}

get_github_latest_tag() {
  local repository="${1}"

  repositoryLatestTag="$(curl --silent https://api.github.com/repos/"${repository}"/releases/latest | jq -r '.tag_name')"
  export repositoryLatestTag

  repositoryLatestTagStripV=${repositoryLatestTag//v/}

  logger "info" "GitHub latest tag for ${repository} is ${repositoryLatestTag}"
  export GITHUB_LATEST_TAG="${repositoryLatestTag}"
  export GITHUB_LATEST_TAG_STRIP_V="${repositoryLatestTagStripV}"
}

apt_install() {
  local packages="${1}"

  apt-get update --yes

  apt-get install --yes --no-install-recommends "${packages}"

  apt-get clean

  rm --force --recursive /var/lib/apt/lists/*
}
