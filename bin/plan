#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

# shellcheck source=.common.sh
source "$(dirname ${BASH_SOURCE[0]})/.common.sh"

cluster="${PIPELINE_CLUSTER}"

# The two undefined variables below (master_base_sha and branch_head_sha)
# are passed by the github-pull-request concourse resource.
# shellcheck disable=SC2154
changed_dirs=$(git diff --no-commit-id --name-only -r "${master_base_sha}...${branch_head_sha}" | grep "${PIPELINE_CLUSTER}" | awk 'BEGIN{FS=OFS="/"}/\/resources\//{NF-=1; print $3}' | sort | uniq) || true

log green "planning for cluster ${cluster}"
( set -x; kubectl config use-context "${cluster}" ) || { log red "no context found, skipping ${cluster}" && exit 1; }
if [ -n "$changed_dirs" ]; then
  for _f in ${changed_dirs}; do
    namespace="$(basename ${_f})"
    terraform_resources_path="namespaces/${cluster}/${namespace}/resources"
    if [ -d "${terraform_resources_path}" ]; then
      (
        cd "${terraform_resources_path}"
        log blue "Planning terraform resources for namespace ${namespace} in ${cluster}"
        terraform init \
          -backend-config="bucket=${PIPELINE_STATE_BUCKET}" \
          -backend-config="key=${PIPELINE_STATE_KEY_PREFIX}${cluster}/${namespace}/terraform.tfstate" \
          -backend-config="region=${PIPELINE_STATE_REGION}"
        terraform plan \
          -var="cluster_name=${cluster%%.*}" \
          -var="cluster_state_bucket=${PIPELINE_CLUSTER_STATE_BUCKET}" \
          -var="cluster_state_key=${PIPELINE_CLUSTER_STATE_KEY_PREFIX}${cluster%%.*}/terraform.tfstate"
      )
    fi
  done
else
  log blue "No terraform changes in this PR"
fi
