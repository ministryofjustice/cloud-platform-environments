# generated by https://github.com/ministryofjustice/money-to-prisoners-deploy
module "s3" {
  source = "github.com/ministryofjustice/cloud-platform-terraform-s3-bucket?ref=5.1.0"

  providers = {
    aws = aws.london
  }

  business_unit          = var.business_unit
  team_name              = var.team_name
  application            = var.application
  is_production          = var.is_production
  namespace              = var.namespace
  environment_name       = var.environment
  infrastructure_support = var.infrastructure_support

  acl                           = "private"
  enable_allow_block_pub_access = true
  versioning                    = false

  lifecycle_rule = [
    {
      enabled = true
      id      = "delete email attachments after 5 weeks"
      prefix  = "emails/"

      abort_incomplete_multipart_upload_days = 2
      noncurrent_version_expiration = [
        {
          days = 35
        },
      ]
      expiration = [
        {
          days = 35
        },
      ]
    },
  ]
}

data "aws_iam_policy_document" "s3-read" {
  # Allows read-only access to private S3 bucket
  statement {
    actions = [
      "s3:GetBucketLocation",
      "s3:GetBucketPolicy",
      "s3:ListBucket",
      "s3:ListBucketVersions",
    ]
    resources = [
      module.s3.bucket_arn,
    ]
  }

  statement {
    actions = [
      "s3:GetObject",
      "s3:GetObjectAcl",
      "s3:GetObjectTagging",
      "s3:GetObjectTorrent",
      "s3:GetObjectVersion",
      "s3:GetObjectVersionAcl",
      "s3:GetObjectVersionTagging",
      "s3:GetObjectVersionTorrent",
    ]
    resources = [
      "${module.s3.bucket_arn}/*",
    ]
  }
}

data "aws_iam_policy_document" "s3-write" {
  # Allows write-only access to private S3 bucket
  statement {
    actions = [
      "s3:ListBucketMultipartUploads",
    ]
    resources = [
      module.s3.bucket_arn,
    ]
  }

  statement {
    actions = [
      "s3:AbortMultipartUpload",
      "s3:DeleteObject",
      "s3:DeleteObjectTagging",
      "s3:DeleteObjectVersion",
      "s3:DeleteObjectVersionTagging",
      "s3:ListMultipartUploadParts",
      "s3:PutObject",
      "s3:PutObjectAcl",
      "s3:PutObjectTagging",
      "s3:PutObjectVersionAcl",
      "s3:PutObjectVersionTagging",
      "s3:RestoreObject",
    ]
    resources = [
      "${module.s3.bucket_arn}/*",
    ]
  }
}

resource "kubernetes_secret" "s3" {
  metadata {
    name      = "s3"
    namespace = var.namespace
  }

  data = {
    bucket_arn      = module.s3.bucket_arn
    bucket_name     = module.s3.bucket_name
    irsa_policy_arn = module.s3.irsa_policy_arn
  }
}

data "aws_iam_policy_document" "analytical-platform" {
  # Allows direct put access to subpath of terraformed S3 bucket for mimicking Analytical Platform
  statement {
    actions = [
      "s3:PutObject",
      "s3:PutObjectAcl",
    ]
    resources = [
      "${module.s3.bucket_arn}/faux-ap/*",
    ]
  }
}
