# Define the list of buckets to protect
locals {
  bucket_list = {
    "bucket1" = module.s3_advantis_bucket.bucket_name
    "bucket2" = module.s3_private_ca_bucket.bucket_name
  }
}

resource "aws_iam_role" "MemberInfrastructureAccess" {
  name               = "MemberInfrastructureAccess"
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Effect = "Allow"
        Principal = {
          Service = "guardduty.amazonaws.com"  # Replace with the appropriate service or user
        }
        Action = "sts:AssumeRole"
      }
    ]
  })
}

# GuardDuty Malware Protection Plan
resource "aws_guardduty_malware_protection_plan" "malware_protection_plan" {
  for_each = local.bucket_list

  role = data.aws_iam_role.member_access.arn

  protected_resource {
    s3_bucket {
      bucket_name = each.value
    }
  }

  actions {
    tagging {
      status = "ENABLED"
    }
  }

  tags = {
    "Name" = "GuardDutyMalwareProtectionPlan-${each.value}" # Unique tag for each bucket
  }
}

# Data source for the member-access IAM role
data "aws_iam_role" "member_access" {
  depends_on = [aws_iam_role.MemberInfrastructureAccess]
  name = aws_iam_role.MemberInfrastructureAccess.name
}