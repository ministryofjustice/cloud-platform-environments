apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  namespace: laa-court-data-ui-production
  labels:
    prometheus: cloud-platform
    role: alert-rules
  name: prometheus-custom-rules-laa-court-data-ui
spec:
  groups:
  - name: application-rules
    rules:
    - alert: Instance-Down
      expr: absent(up{namespace="laa-court-data-ui-production"}) == 1
      for: 1m
      labels:
        severity: laa-court-data-ui
    - alert: Quota-Exceeded
      expr: 100 * kube_resourcequota{job="kube-state-metrics",type="used",namespace="laa-court-data-ui-production"} / ignoring(instance, job, type) (kube_resourcequota{job="kube-state-metrics",type="hard",namespace="laa-court-data-ui-production"} > 0) > 90
      for: 1m
      labels:
        severity: laa-court-data-ui
      annotations:
        message: laa-court-data-ui-production is using {{ printf "%0.0f" $value}}% of its {{ $labels.resource }} quota.
        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded
    - alert: nginx-5xx-error
      expr: sum(rate(nginx_ingress_controller_requests{exported_namespace="laa-court-data-ui-production", status=~"5.."}[5m])) * 300 > 5
      for: 1m
      labels:
        severity: laa-court-data-ui
      annotations:
        message: laa-court-data-ui-production An HTTP 5xx error has occurred
        runbook_url: https://kibana.cloud-platform.service.justice.gov.uk/_plugin/kibana/app/kibana#/discover?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-24h,to:now))&_a=(columns:!(log_processed.status,log_processed.http_referer,log_processed.request_uri),filters:!(('$state':(store:appState),meta:(alias:!n,disabled:!f,index:'71644ed0-d648-11ea-b6f0-6bf964cd13a4',key:log_processed.kubernetes_namespace,negate:!f,params:(query:laa-court-data-ui-production),type:phrase,value:laa-court-data-ui-production),query:(match:(log_processed.kubernetes_namespace:(query:laa-court-data-ui-production,type:phrase)))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:'71644ed0-d648-11ea-b6f0-6bf964cd13a4',key:log_processed.status,negate:!f,params:(query:'500'),type:phrase,value:'500'),query:(match:(log_processed.status:(query:'500',type:phrase))))),index:'71644ed0-d648-11ea-b6f0-6bf964cd13a4',interval:auto,query:(language:lucene,query:''),sort:!(!('@timestamp',desc)))
    # TODO: Reinstate this alert when long requests are less constant
    # - alert: Long-Request
    #   expr: ruby_http_request_duration_seconds{namespace="laa-court-data-ui-production"} > 30
    #   for: 1m
    #   labels:
    #     severity: laa-court-data-ui
    #   annotations:
    #     message: laa-court-data-ui-production Request is taking more than 30 seconds

