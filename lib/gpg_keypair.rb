require 'tmpdir'

class GpgKeypair
  attr_reader :tmpdir

  COMMENT = "Keypair generated by Cloud Platform Gitops pipeline at #{Time.now}"

  def generate
    pubkey = seckey = nil

    Dir.mktmpdir do |dir|
      @tmpdir = dir
      generate_config
      generate_keypair
      pubkey = File.read(pubkeyfile)
      seckey = File.read(seckeyfile)
      @tmpdir = nil
    end
    {
      public: pubkey,
      private: seckey,
    }
  end

  private

  def gpgconf
    "#{tmpdir}/gpgconf"
  end

  def generate_config
    File.write(gpgconf, <<~EOF
      %no-protection
      Key-Type: default
      Key-Usage: encrypt
      Name-Real: Cloud Platform
      Name-Email: platforms@digital.justice.gov.uk
      Expire-Date: 0
      EOF
    )
  end

  def generate_keypair
    execute("gpg --quiet --homedir #{tmpdir} --batch --lock-never --gen-key  #{gpgconf}", silent: true)
    export_public_key
    export_private_key
    execute("killall gpg-agent", silent: true)
  end

  def export_private_key
    cmd = %(gpg --quiet --homedir #{tmpdir} --batch --lock-never --pinentry-mode loopback --armor --comment "#{COMMENT}" --export-secret-keys --output #{seckeyfile})
    execute(cmd)
  end

  def export_public_key
    cmd = %(gpg --quiet --homedir #{tmpdir} --batch --lock-never --armor --comment "#{COMMENT}" --export --output #{pubkeyfile})
    execute(cmd)
  end

  def pubkeyfile
    "#{tmpdir}/gitops.asc"
  end

  def seckeyfile
    "#{tmpdir}/gitops.pgp"
  end
end
